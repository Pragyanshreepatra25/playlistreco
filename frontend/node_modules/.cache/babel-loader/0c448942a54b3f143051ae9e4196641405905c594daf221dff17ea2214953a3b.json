{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RHYTHMIC ZONE\\\\spotiee\\\\frontend\\\\src\\\\components\\\\PlaylistDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaylistDisplay({\n  emotion,\n  languages\n}) {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    if (emotion && languages.length > 0) {\n      fetchPlaylists();\n    }\n  }, [emotion, languages]);\n  const fetchPlaylists = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/playlists', {\n        params: {\n          emotion,\n          languages: languages.join(',')\n        }\n      });\n      setPlaylists(response.data);\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recommended Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), playlists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No playlists found for the selected emotion and languages.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n        gap: '20px'\n      },\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }, this), \" \", playlist.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Emotion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }, this), \" \", playlist.emotion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Songs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }, this), \" \", playlist.songs.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, playlist._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaylistDisplay, \"/7UASZ0pXGZcrJioajU839hHwfM=\");\n_c = PlaylistDisplay;\nexport default PlaylistDisplay;\nvar _c;\n$RefreshReg$(_c, \"PlaylistDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PlaylistDisplay","emotion","languages","_s","playlists","setPlaylists","length","fetchPlaylists","response","get","params","join","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","map","playlist","border","padding","borderRadius","backgroundColor","name","language","songs","_id","_c","$RefreshReg$"],"sources":["C:/Users/RHYTHMIC ZONE/spotiee/frontend/src/components/PlaylistDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PlaylistDisplay({ emotion, languages }) {\r\n  const [playlists, setPlaylists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (emotion && languages.length > 0) {\r\n      fetchPlaylists();\r\n    }\r\n  }, [emotion, languages]);\r\n\r\n  const fetchPlaylists = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/playlists', {\r\n        params: {\r\n          emotion,\r\n          languages: languages.join(',')\r\n        }\r\n      });\r\n      setPlaylists(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching playlists:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Recommended Playlists</h3>\r\n      {playlists.length === 0 ? (\r\n        <p>No playlists found for the selected emotion and languages.</p>\r\n      ) : (\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))', gap: '20px' }}>\r\n          {playlists.map((playlist) => (\r\n            <div key={playlist._id} style={{ \r\n              border: '1px solid #ccc', \r\n              padding: '15px', \r\n              borderRadius: '8px',\r\n              backgroundColor: '#f9f9f9'\r\n            }}>\r\n              <h4>{playlist.name}</h4>\r\n              <p><strong>Language:</strong> {playlist.language}</p>\r\n              <p><strong>Emotion:</strong> {playlist.emotion}</p>\r\n              <p><strong>Songs:</strong> {playlist.songs.length}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}