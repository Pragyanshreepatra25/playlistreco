{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RHYTHMIC ZONE\\\\spotiee\\\\frontend\\\\src\\\\components\\\\playlist1.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaylistDisplay({\n  emotion,\n  languages\n}) {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Emotion mapping for better recommendations\n  const emotionMappings = {\n    'happy': ['happy', 'joyful', 'cheerful', 'excited'],\n    'sad': ['sad', 'melancholy', 'emotional', 'calm'],\n    'angry': ['angry', 'intense', 'energetic', 'aggressive'],\n    'fearful': ['fearful', 'anxious', 'calm', 'peaceful'],\n    'disgusted': ['disgusted', 'neutral', 'calm'],\n    'surprised': ['surprised', 'excited', 'energetic', 'happy'],\n    'neutral': ['neutral', 'calm', 'peaceful', 'relaxed']\n  };\n  useEffect(() => {\n    if (emotion && languages.length > 0) {\n      fetchPlaylists();\n    }\n  }, [emotion, languages]);\n  const fetchPlaylists = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      // First try to get exact emotion match\n      let response = await axios.get('http://localhost:5000/api/playlists', {\n        params: {\n          emotion,\n          languages: languages.join(',')\n        }\n      });\n\n      // If no playlists found, try related emotions\n      if (response.data.length === 0 && emotionMappings[emotion]) {\n        const relatedEmotions = emotionMappings[emotion];\n        for (const relatedEmotion of relatedEmotions) {\n          if (relatedEmotion !== emotion) {\n            response = await axios.get('http://localhost:5000/api/playlists', {\n              params: {\n                emotion: relatedEmotion,\n                languages: languages.join(',')\n              }\n            });\n            if (response.data.length > 0) break;\n          }\n        }\n      }\n\n      // If still no playlists, try without emotion filter\n      if (response.data.length === 0) {\n        response = await axios.get('http://localhost:5000/api/playlists', {\n          params: {\n            languages: languages.join(',')\n          }\n        });\n      }\n      setPlaylists(response.data);\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      setError('Failed to load playlists. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getEmotionEmoji = emotion => {\n    const emojiMap = {\n      'happy': '😊',\n      'sad': '😢',\n      'angry': '😠',\n      'fearful': '😨',\n      'disgusted': '🤢',\n      'surprised': '😲',\n      'neutral': '😐'\n    };\n    return emojiMap[emotion] || '🎵';\n  };\n  const getEmotionColor = emotion => {\n    const colorMap = {\n      'happy': '#28a745',\n      'sad': '#6c757d',\n      'angry': '#dc3545',\n      'fearful': '#ffc107',\n      'disgusted': '#6f42c1',\n      'surprised': '#fd7e14',\n      'neutral': '#17a2b8'\n    };\n    return colorMap[emotion] || '#007bff';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recommended Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), playlists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No playlists found for the selected emotion and languages.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n        gap: '20px'\n      },\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 18\n          }, this), \" \", playlist.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Emotion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 18\n          }, this), \" \", playlist.emotion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Songs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 18\n          }, this), \" \", playlist.songs.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, playlist._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaylistDisplay, \"PEh2fuTuqP5zuNI1yPglukC5Nkg=\");\n_c = PlaylistDisplay;\nexport default PlaylistDisplay;\nvar _c;\n$RefreshReg$(_c, \"PlaylistDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PlaylistDisplay","emotion","languages","_s","playlists","setPlaylists","loading","setLoading","error","setError","emotionMappings","length","fetchPlaylists","response","get","params","join","data","relatedEmotions","relatedEmotion","console","getEmotionEmoji","emojiMap","getEmotionColor","colorMap","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","map","playlist","border","padding","borderRadius","backgroundColor","name","language","songs","_id","_c","$RefreshReg$"],"sources":["C:/Users/RHYTHMIC ZONE/spotiee/frontend/src/components/playlist1.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PlaylistDisplay({ emotion, languages }) {\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Emotion mapping for better recommendations\r\n  const emotionMappings = {\r\n    'happy': ['happy', 'joyful', 'cheerful', 'excited'],\r\n    'sad': ['sad', 'melancholy', 'emotional', 'calm'],\r\n    'angry': ['angry', 'intense', 'energetic', 'aggressive'],\r\n    'fearful': ['fearful', 'anxious', 'calm', 'peaceful'],\r\n    'disgusted': ['disgusted', 'neutral', 'calm'],\r\n    'surprised': ['surprised', 'excited', 'energetic', 'happy'],\r\n    'neutral': ['neutral', 'calm', 'peaceful', 'relaxed']\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emotion && languages.length > 0) {\r\n      fetchPlaylists();\r\n    }\r\n  }, [emotion, languages]);\r\n\r\n  const fetchPlaylists = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // First try to get exact emotion match\r\n      let response = await axios.get('http://localhost:5000/api/playlists', {\r\n        params: {\r\n          emotion,\r\n          languages: languages.join(',')\r\n        }\r\n      });\r\n\r\n      // If no playlists found, try related emotions\r\n      if (response.data.length === 0 && emotionMappings[emotion]) {\r\n        const relatedEmotions = emotionMappings[emotion];\r\n        for (const relatedEmotion of relatedEmotions) {\r\n          if (relatedEmotion !== emotion) {\r\n            response = await axios.get('http://localhost:5000/api/playlists', {\r\n              params: {\r\n                emotion: relatedEmotion,\r\n                languages: languages.join(',')\r\n              }\r\n            });\r\n            if (response.data.length > 0) break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If still no playlists, try without emotion filter\r\n      if (response.data.length === 0) {\r\n        response = await axios.get('http://localhost:5000/api/playlists', {\r\n          params: {\r\n            languages: languages.join(',')\r\n          }\r\n        });\r\n      }\r\n\r\n      setPlaylists(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching playlists:', error);\r\n      setError('Failed to load playlists. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getEmotionEmoji = (emotion) => {\r\n    const emojiMap = {\r\n      'happy': '😊',\r\n      'sad': '😢',\r\n      'angry': '😠',\r\n      'fearful': '😨',\r\n      'disgusted': '🤢',\r\n      'surprised': '😲',\r\n      'neutral': '😐'\r\n    };\r\n    return emojiMap[emotion] || '🎵';\r\n  };\r\n\r\n  const getEmotionColor = (emotion) => {\r\n    const colorMap = {\r\n      'happy': '#28a745',\r\n      'sad': '#6c757d',\r\n      'angry': '#dc3545',\r\n      'fearful': '#ffc107',\r\n      'disgusted': '#6f42c1',\r\n      'surprised': '#fd7e14',\r\n      'neutral': '#17a2b8'\r\n    };\r\n    return colorMap[emotion] || '#007bff';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Recommended Playlists</h3>\r\n      {playlists.length === 0 ? (\r\n        <p>No playlists found for the selected emotion and languages.</p>\r\n      ) : (\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))', gap: '20px' }}>\r\n          {playlists.map((playlist) => (\r\n            <div key={playlist._id} style={{ \r\n              border: '1px solid #ccc', \r\n              padding: '15px', \r\n              borderRadius: '8px',\r\n              backgroundColor: '#f9f9f9'\r\n            }}>\r\n              <h4>{playlist.name}</h4>\r\n              <p><strong>Language:</strong> {playlist.language}</p>\r\n              <p><strong>Emotion:</strong> {playlist.emotion}</p>\r\n              <p><strong>Songs:</strong> {playlist.songs.length}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}