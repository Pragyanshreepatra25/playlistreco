{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RHYTHMIC ZONE\\\\spotiee\\\\frontend\\\\src\\\\components\\\\webcamExpression.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebcamExpression({\n  onEmotionDetected\n}) {\n  _s();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [modelsLoaded, setModelsLoaded] = useState(false);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.tinyFaceDetector.loadFromUri('/models');\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\n        setModelsLoaded(true);\n        startVideo();\n      } catch (error) {\n        console.error('Error loading models:', error);\n      }\n    };\n    loadModels();\n  }, []);\n  const startVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: {}\n    }).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }).catch(err => console.error('Error accessing webcam:', err));\n  };\n  const handleVideoPlay = () => {\n    if (!modelsLoaded) return;\n    setInterval(async () => {\n      if (videoRef.current && canvasRef.current) {\n        const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n        if (detections.length > 0) {\n          const expressions = detections[0].expressions;\n          const maxExpression = Object.keys(expressions).reduce((a, b) => expressions[a] > expressions[b] ? a : b);\n          onEmotionDetected(maxExpression);\n\n          // Draw on canvas\n          const canvas = canvasRef.current;\n          const displaySize = {\n            width: videoRef.current.videoWidth,\n            height: videoRef.current.videoHeight\n          };\n          faceapi.matchDimensions(canvas, displaySize);\n          const resizedDetections = faceapi.resizeResults(detections, displaySize);\n          canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n          faceapi.draw.drawDetections(canvas, resizedDetections);\n          faceapi.draw.drawFaceExpressions(canvas, resizedDetections);\n        }\n      }\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      width: \"640\",\n      height: \"480\",\n      onPlay: handleVideoPlay,\n      style: {\n        borderRadius: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(WebcamExpression, \"XPCrCtyBD24LIVMmiOcnDUGy/AU=\");\n_c = WebcamExpression;\nexport default WebcamExpression;\nvar _c;\n$RefreshReg$(_c, \"WebcamExpression\");","map":{"version":3,"names":["React","useRef","useEffect","useState","faceapi","jsxDEV","_jsxDEV","WebcamExpression","onEmotionDetected","_s","videoRef","canvasRef","modelsLoaded","setModelsLoaded","loadModels","nets","tinyFaceDetector","loadFromUri","faceExpressionNet","startVideo","error","console","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","handleVideoPlay","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceExpressions","length","expressions","maxExpression","Object","keys","reduce","a","b","canvas","displaySize","width","videoWidth","height","videoHeight","matchDimensions","resizedDetections","resizeResults","getContext","clearRect","draw","drawDetections","drawFaceExpressions","style","position","display","children","ref","autoPlay","muted","onPlay","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","top","left","_c","$RefreshReg$"],"sources":["C:/Users/RHYTHMIC ZONE/spotiee/frontend/src/components/webcamExpression.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nfunction WebcamExpression({ onEmotionDetected }) {\r\n  const videoRef = useRef();\r\n  const canvasRef = useRef();\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri('/models');\r\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\r\n        setModelsLoaded(true);\r\n        startVideo();\r\n      } catch (error) {\r\n        console.error('Error loading models:', error);\r\n      }\r\n    };\r\n\r\n    loadModels();\r\n  }, []);\r\n\r\n  const startVideo = () => {\r\n    navigator.mediaDevices.getUserMedia({ video: {} })\r\n      .then((stream) => {\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      })\r\n      .catch(err => console.error('Error accessing webcam:', err));\r\n  };\r\n\r\n  const handleVideoPlay = () => {\r\n    if (!modelsLoaded) return;\r\n\r\n    setInterval(async () => {\r\n      if (videoRef.current && canvasRef.current) {\r\n        const detections = await faceapi\r\n          .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n          .withFaceExpressions();\r\n\r\n        if (detections.length > 0) {\r\n          const expressions = detections[0].expressions;\r\n          const maxExpression = Object.keys(expressions).reduce((a, b) => \r\n            expressions[a] > expressions[b] ? a : b\r\n          );\r\n          onEmotionDetected(maxExpression);\r\n\r\n          // Draw on canvas\r\n          const canvas = canvasRef.current;\r\n          const displaySize = { width: videoRef.current.videoWidth, height: videoRef.current.videoHeight };\r\n          faceapi.matchDimensions(canvas, displaySize);\r\n          const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n          canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\r\n          faceapi.draw.drawDetections(canvas, resizedDetections);\r\n          faceapi.draw.drawFaceExpressions(canvas, resizedDetections);\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        muted\r\n        width=\"640\"\r\n        height=\"480\"\r\n        onPlay={handleVideoPlay}\r\n        style={{ borderRadius: '8px' }}\r\n      />\r\n      <canvas \r\n        ref={canvasRef} \r\n        style={{ position: 'absolute', top: 0, left: 0 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebcamExpression;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,gBAAgBA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGT,MAAM,CAAC,CAAC;EACzB,MAAMU,SAAS,GAAGV,MAAM,CAAC,CAAC;EAC1B,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMV,OAAO,CAACW,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAAC,SAAS,CAAC;QAC1D,MAAMb,OAAO,CAACW,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAAC,SAAS,CAAC;QAC3DJ,eAAe,CAAC,IAAI,CAAC;QACrBM,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBG,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE,CAAC;IAAE,CAAC,CAAC,CAC/CC,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAIjB,QAAQ,CAACkB,OAAO,EAAE;QACpBlB,QAAQ,CAACkB,OAAO,CAACC,SAAS,GAAGF,MAAM;MACrC;IACF,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAIV,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEW,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACpB,YAAY,EAAE;IAEnBqB,WAAW,CAAC,YAAY;MACtB,IAAIvB,QAAQ,CAACkB,OAAO,IAAIjB,SAAS,CAACiB,OAAO,EAAE;QACzC,MAAMM,UAAU,GAAG,MAAM9B,OAAO,CAC7B+B,cAAc,CAACzB,QAAQ,CAACkB,OAAO,EAAE,IAAIxB,OAAO,CAACgC,uBAAuB,CAAC,CAAC,CAAC,CACvEC,mBAAmB,CAAC,CAAC;QAExB,IAAIH,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;UACzB,MAAMC,WAAW,GAAGL,UAAU,CAAC,CAAC,CAAC,CAACK,WAAW;UAC7C,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACH,WAAW,CAAC,CAACI,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KACzDN,WAAW,CAACK,CAAC,CAAC,GAAGL,WAAW,CAACM,CAAC,CAAC,GAAGD,CAAC,GAAGC,CACxC,CAAC;UACDrC,iBAAiB,CAACgC,aAAa,CAAC;;UAEhC;UACA,MAAMM,MAAM,GAAGnC,SAAS,CAACiB,OAAO;UAChC,MAAMmB,WAAW,GAAG;YAAEC,KAAK,EAAEtC,QAAQ,CAACkB,OAAO,CAACqB,UAAU;YAAEC,MAAM,EAAExC,QAAQ,CAACkB,OAAO,CAACuB;UAAY,CAAC;UAChG/C,OAAO,CAACgD,eAAe,CAACN,MAAM,EAAEC,WAAW,CAAC;UAC5C,MAAMM,iBAAiB,GAAGjD,OAAO,CAACkD,aAAa,CAACpB,UAAU,EAAEa,WAAW,CAAC;UACxED,MAAM,CAACS,UAAU,CAAC,IAAI,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEV,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACI,MAAM,CAAC;UACpE9C,OAAO,CAACqD,IAAI,CAACC,cAAc,CAACZ,MAAM,EAAEO,iBAAiB,CAAC;UACtDjD,OAAO,CAACqD,IAAI,CAACE,mBAAmB,CAACb,MAAM,EAAEO,iBAAiB,CAAC;QAC7D;MACF;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACE/C,OAAA;IAAKsD,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAAC,QAAA,gBAC5DzD,OAAA;MACE0D,GAAG,EAAEtD,QAAS;MACduD,QAAQ;MACRC,KAAK;MACLlB,KAAK,EAAC,KAAK;MACXE,MAAM,EAAC,KAAK;MACZiB,MAAM,EAAEnC,eAAgB;MACxB4B,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFlE,OAAA;MACE0D,GAAG,EAAErD,SAAU;MACfiD,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEY,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/D,EAAA,CA5EQF,gBAAgB;AAAAoE,EAAA,GAAhBpE,gBAAgB;AA8EzB,eAAeA,gBAAgB;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}